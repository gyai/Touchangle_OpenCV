#画像を読み込んで、OpenCV使って静電容量画像の指の輪郭を取得、
#長軸短軸の長さパラメータを取得して、縦横の比率をリストにぶち込む
#それぞれの比率から、タスク毎に「指ベッタリ」か「指の側面」かを判別。
#ではターゲット右下位置の側面だった率はどれくらい？を知りたい。

# 1.全体での初期側面率
# 2.エラー多かった右下3ターゲットタスクのみの初期側面率
# ↓は余裕あれば↓
# 3.エラー全体での側面率
# 4.右下3タゲでのエラー全体からの側面率
# #

#右下位置の画像はどうやって識別する？また、エラー時の右下タスクだけを抜き出すのはどうやる？
#-> 右下タゲのタスク番号は控えた。
# 1.全体の画像を取り込む→右下ターゲットも後々やりやすいように、被験者セクション毎に収納場所（参照場所は分けたい）
# →全部画像処理かけて長短の比率出す(この時、セクション情報とタスク番号はわかるようにしたい)→それを一つずつintリストに入れる→割合計算
# 2.各セクションの該当タスクだけ画像処理以降の処理をする。
# #


import cv2
import re
import glob

files = glob.glob("img/*.png")
img_datas = [] #先に配列作っておけば、読み込んだ画像データを配列内に追加してくれる？(上書きしないよな。。？)

for f in files: #imageフォルダ下の全セクションフォルダ文繰り返す(1_1~5_5)
    #全部の画像データを取得。
    img = cv2.imread(f,cv2.IMREAD_GRAYSCALE)
    img_datas.append(img)
    
    res = cv2.resize(img, None ,fx=50 ,fy=50 ,interpolation = cv2.INTER_CUBIC)
    cv2.imshow('f',res)
    cv2.waitKey(1)
    cv2.destroyAllWindows()
    #ここまでで、全部の画像データがグレースケール化されて表示できるようになった
    


 
